"use strict";

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.map.js");

require("core-js/modules/es.object.to-string.js");

require("core-js/modules/es.string.iterator.js");

require("core-js/modules/web.dom-collections.iterator.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getContract = getContract;
exports._contractsCache = void 0;

var _ethers = require("ethers");

var _providers = require("./providers.js");

var _signers = require("./signers.js");

var contractsCache = new Map();
/**
 * Caches smart contract instances
 *
 * @param {String} contractAddress - The smart contract address
 * @param {Array} abi - The smart contract ABI
 * @param {String} providerUrl - Network url (i.e, http://localhost:8545). Optional
 * @param {Object} signerData - Signer data used to build a Signer to send any deployment transaction
 * @return {ethers.Contract} The request contract
 */

exports._contractsCache = contractsCache;

function getContract(contractAddress, abi, providerUrl) {
  var signerData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  var signerId = signerData.addressOrIndex || signerData.path;

  if (contractsCache.has(contractAddress + signerId)) {
    return contractsCache.get(contractAddress + signerId);
  }

  var provider = (0, _providers.getProvider)(providerUrl);
  var signer = (0, _signers.getSigner)(provider, signerData);
  var contract = new _ethers.ethers.Contract(contractAddress, abi, signer);
  contractsCache.set(contractAddress + signerId, contract);
  return contract;
}